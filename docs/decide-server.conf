
# unsecured port redirects to https
server {
   listen 80 default_server;
   listen [::]:80 default_server ipv6only=on;
   return 301 https://aplonis.psyc.virginia.edu$request_uri;
}

upstream host_backend {
    server 127.0.0.1:8020;
    keepalive 32;
}


# HTTPS server
server {
   listen 443;
   server_name aplonis.psyc.virginia.edu;

   root /srv/www;
   index index.html index.htm;

   ssl on;
   ssl_certificate /etc/ssl/certs/aplonis-cert.pem;
   ssl_certificate_key /etc/ssl/private/aplonis-key.pem;
   ssl_session_timeout 5m;

   ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
   ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
   ssl_prefer_server_ciphers on;
   # see https://weakdh.org/sysadmin.html for how to create unique diffie-hellman params
   ssl_dhparam /etc/ssl/private/dhparams.pem;

   location / {
      # require auth for landing page, reducing visibility
      satisfy any;
      try_files $uri $uri/ =404;
   }

   # controller proxies to local node process
   location /decide/ {
      # enable CORS requests - need to do it here to avoid requiring authentication
      if ($request_method = 'OPTIONS') {
         add_header 'Access-Control-Allow-Origin' '*';
         add_header 'Access-Control-Allow-Credentials' 'true';
         add_header 'Access-Control-Allow-Methods' 'GET';
         add_header 'Access-Control-Allow-Headers' 'Access-Control-Request-Headers,Authorization';
         add_header 'Access-Control-Max-Age' 1728000;
         add_header 'Content-Type' 'text/plain charset=UTF-8';
         add_header 'Content-Length' 0;
         return 204;
      }
      proxy_pass http://host_backend/;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_http_version 1.1;
      proxy_redirect off;
   }

   location ~ ^/decide/api/controllers/(?<dname>.+)/device {
      return 303 /device/$dname/;
   }

   # proxies to connected beaglebones
   location ~ ^/device/(?<dname>[a-z0-9-_]+)/(?<rest>.*)$ {
      resolver 127.0.0.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_pass http://$dname:8000/$rest$is_args$query_string;
      proxy_redirect off;
   }

   error_page 500 502 503 504 /50x.html;
   location = /50x.html {
      root /usr/share/nginx/html;
   }

   # allow password-free access from trusted subnets; otherwise get password
   satisfy any;
   allow 128.143.0.0/16;
   allow 172.25.0.0/16;
   allow 172.27.0.0/16;
   allow 127.0.0.1;
   deny all;
   auth_basic "meliza lab";
   auth_basic_user_file /etc/nginx/passwords;
}
